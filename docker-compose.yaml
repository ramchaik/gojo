version: "3.8"

services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - COOKIE_SECRET=${COOKIE_SECRET}
        - LIVEBLOCKS_SECRET_KEY=${LIVEBLOCKS_SECRET_KEY}
        - DATABASE_URL=${DATABASE_URL}
        - BACKEND_API_BASE_URL=${BACKEND_API_BASE_URL}
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=${DATABASE_URL}

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - PORT=${BACKEND_PORT}
        - COOKIE_SECRET=${COOKIE_SECRET}
        - LIVEBLOCKS_SECRET_KEY=${LIVEBLOCKS_SECRET_KEY}
        - DATABASE_URL=${DATABASE_URL}

    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
